#include "sdl/sdl.ceu"

var&? SDL_Init sdl =
    spawn SDL_Init("Exercicio 1", 640,480, SDL_Color(0xFF,0xFF,0xFF,0xFF));

watching sdl do
    var SDL_Rect r1 = val SDL_Rect(100,100, 50,50);
    var SDL_Rect r2 = val SDL_Rect(200,300, 50,50);

    par do
        par/or do
            loop do
                var int i;
                loop i in [1 -> 100] do
                    await 10ms;
                    r1.x = r1.x + 1;
                end
                loop i in [1 -> 100] do
                    await 10ms;
                    r1.y = r1.y + 1;
                end
                loop i in [1 -> 100] do
                    await 10ms;
                    r1.x = r1.x - 1;
                end
                loop i in [1 -> 100] do
                    await 10ms;
                    r1.y = r1.y - 1;
                end
            end
        with
            var _SDL_MouseButtonEvent&& but;
            but = await SDL_MOUSEBUTTONDOWN
                  until _SDL_Rect_vs_Mouse((&&r1 as _SDL_Rect&&), but) as bool;
        end
        await FOREVER;
    with
        par/or do
            loop do
                var int i;
                loop i in [1 -> 100] do
                    await 15ms;
                    r2.x = r2.x + 1;
                end
                loop i in [1 -> 100] do
                    await 15ms;
                    r2.y = r2.y + 1;
                end
                loop i in [1 -> 100] do
                    await 15ms;
                    r2.x = r2.x - 1;
                end
                loop i in [1 -> 100] do
                    await 15ms;
                    r2.y = r2.y - 1;
                end
            end
        with
            var _SDL_MouseButtonEvent&& but;
            but = await SDL_MOUSEBUTTONDOWN
                  until _SDL_Rect_vs_Mouse((&&r2 as _SDL_Rect&&), but) as bool;
        end
        await FOREVER;
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&sdl!.ren, 0x00,0x00,0xFF,0x00);
            _SDL_RenderFillRect(&&sdl!.ren, (&&r1 as _SDL_Rect&&));
            _SDL_RenderFillRect(&&sdl!.ren, (&&r2 as _SDL_Rect&&));
        end
    end
end

escape 0;
